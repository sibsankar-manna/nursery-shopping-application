{"ast":null,"code":"import { createSlice } from '@reduxjs/toolkit';\nexport const CartSlice = createSlice({\n  name: 'cart',\n  initialState: {\n    items: [] // Initialize items as an empty array\n  },\n  reducers: {\n    addItem: (state, action) => {\n      const {\n        name,\n        image,\n        cost\n      } = action.payload;\n      const existingItem = state.items.find(item => item.name === name);\n      if (existingItem) {\n        existingItem.quantity++;\n      } else {\n        state.items.push({\n          name,\n          image,\n          cost,\n          quantity: 1\n        });\n      }\n    },\n    removeItem: (state, action) => {\n      state.items = state.items.filter(item => item.name !== action.payload);\n    },\n    updateQuantity: (state, action) => {\n      const {\n        name,\n        quantity\n      } = action.payload;\n      const itemToUpdate = state.items.find(item => item.name === name);\n      if (itemToUpdate) {\n        itemToUpdate.quantity = quantity;\n      }\n    }\n  }\n});\nexport const {\n  addItem,\n  removeItem,\n  updateQuantity\n} = CartSlice.actions;\nexport default CartSlice.reducer;","map":{"version":3,"names":["createSlice","CartSlice","name","initialState","items","reducers","addItem","state","action","image","cost","payload","existingItem","find","item","quantity","push","removeItem","filter","updateQuantity","itemToUpdate","actions","reducer"],"sources":["/home/sibsankar/Desktop/IBM FULL STACK SOFTWARE DEVOLOPER/frontend using react project/plant/frontend/src/CartSlice.jsx"],"sourcesContent":["import { createSlice } from '@reduxjs/toolkit';\n\nexport const CartSlice = createSlice({\n  name: 'cart',\n  initialState: {\n    items: [], // Initialize items as an empty array\n  },\n  reducers: {\n    addItem: (state, action) => {\n        const { name, image, cost } = action.payload;\n        const existingItem = state.items.find(item => item.name === name);\n        if (existingItem) {\n          existingItem.quantity++;\n        } else {\n          state.items.push({ name, image, cost, quantity: 1 });\n        }\n    },\n    removeItem: (state, action) => {\n        state.items = state.items.filter(item => item.name !== action.payload);\n    },\n    updateQuantity: (state, action) => {\n        const { name, quantity } = action.payload;\n        const itemToUpdate = state.items.find(item => item.name === name);\n        if (itemToUpdate) {\n        itemToUpdate.quantity = quantity;\n        }\n    },\n  },\n});\n\nexport const { addItem, removeItem, updateQuantity } = CartSlice.actions;\n\nexport default CartSlice.reducer;\n"],"mappings":"AAAA,SAASA,WAAW,QAAQ,kBAAkB;AAE9C,OAAO,MAAMC,SAAS,GAAGD,WAAW,CAAC;EACnCE,IAAI,EAAE,MAAM;EACZC,YAAY,EAAE;IACZC,KAAK,EAAE,EAAE,CAAE;EACb,CAAC;EACDC,QAAQ,EAAE;IACRC,OAAO,EAAEA,CAACC,KAAK,EAAEC,MAAM,KAAK;MACxB,MAAM;QAAEN,IAAI;QAAEO,KAAK;QAAEC;MAAK,CAAC,GAAGF,MAAM,CAACG,OAAO;MAC5C,MAAMC,YAAY,GAAGL,KAAK,CAACH,KAAK,CAACS,IAAI,CAACC,IAAI,IAAIA,IAAI,CAACZ,IAAI,KAAKA,IAAI,CAAC;MACjE,IAAIU,YAAY,EAAE;QAChBA,YAAY,CAACG,QAAQ,EAAE;MACzB,CAAC,MAAM;QACLR,KAAK,CAACH,KAAK,CAACY,IAAI,CAAC;UAAEd,IAAI;UAAEO,KAAK;UAAEC,IAAI;UAAEK,QAAQ,EAAE;QAAE,CAAC,CAAC;MACtD;IACJ,CAAC;IACDE,UAAU,EAAEA,CAACV,KAAK,EAAEC,MAAM,KAAK;MAC3BD,KAAK,CAACH,KAAK,GAAGG,KAAK,CAACH,KAAK,CAACc,MAAM,CAACJ,IAAI,IAAIA,IAAI,CAACZ,IAAI,KAAKM,MAAM,CAACG,OAAO,CAAC;IAC1E,CAAC;IACDQ,cAAc,EAAEA,CAACZ,KAAK,EAAEC,MAAM,KAAK;MAC/B,MAAM;QAAEN,IAAI;QAAEa;MAAS,CAAC,GAAGP,MAAM,CAACG,OAAO;MACzC,MAAMS,YAAY,GAAGb,KAAK,CAACH,KAAK,CAACS,IAAI,CAACC,IAAI,IAAIA,IAAI,CAACZ,IAAI,KAAKA,IAAI,CAAC;MACjE,IAAIkB,YAAY,EAAE;QAClBA,YAAY,CAACL,QAAQ,GAAGA,QAAQ;MAChC;IACJ;EACF;AACF,CAAC,CAAC;AAEF,OAAO,MAAM;EAAET,OAAO;EAAEW,UAAU;EAAEE;AAAe,CAAC,GAAGlB,SAAS,CAACoB,OAAO;AAExE,eAAepB,SAAS,CAACqB,OAAO","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}